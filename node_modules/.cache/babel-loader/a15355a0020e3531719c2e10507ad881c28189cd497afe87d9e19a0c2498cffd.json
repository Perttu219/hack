{"ast":null,"code":"var _jsxFileName = \"/home/moilape/prh/reactapp/section25/replace-redux-06-bonus-multiple-slices (2)/replace-redux-06-bonus-multiple-slices/src/containers/Counter.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useStore } from '../hooks-store/store';\nimport './Counter.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Counter = props => {\n  _s();\n  const [state, dispatch] = useStore();\n  const isStarted = true;\n  const isPaused = false;\n  useEffect(() => {\n    let interval = null;\n    if (isStarted && !isPaused) {\n      interval = setInterval(() => {\n        dispatch('ADD', 1);\n      }, 1000);\n    } else if (isPaused && seconds !== 0) {\n      clearInterval(interval);\n    }\n    return () => clearInterval(interval);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"counter\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Only there to proof, that you can have multiple state slices.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Counter: \", state.counter]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch('ADD', 1),\n      children: \"Add 1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch('ADD', 5),\n      children: \"Add 5\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch('SUB', 1),\n      children: \"Subtract 1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch('SUB', 5),\n      children: \"Subtract 5\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(Counter, \"F1qud/hazZ3Fg3Ik3g1Wpjdep6k=\", false, function () {\n  return [useStore];\n});\n_c = Counter;\nexport default Counter;\nvar _c;\n$RefreshReg$(_c, \"Counter\");","map":{"version":3,"names":["React","useEffect","useStore","jsxDEV","_jsxDEV","Counter","props","_s","state","dispatch","isStarted","isPaused","interval","setInterval","seconds","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","counter","onClick","_c","$RefreshReg$"],"sources":["/home/moilape/prh/reactapp/section25/replace-redux-06-bonus-multiple-slices (2)/replace-redux-06-bonus-multiple-slices/src/containers/Counter.js"],"sourcesContent":["import React, {useEffect} from 'react';\n\nimport { useStore } from '../hooks-store/store';\nimport './Counter.css';\n\nconst Counter = props => {\n  const [state, dispatch] = useStore();\n  const isStarted = true;\n  const isPaused = false;\n  useEffect(() => {\n    let interval = null;\n    if (isStarted && !isPaused) {\n      interval = setInterval(() => {\n        dispatch('ADD', 1)\n      }, 1000);\n    } else if (isPaused && seconds !== 0) {\n      clearInterval(interval);\n    }\n\n    return () => clearInterval(interval);\n  }, []);\n\n\n  return (\n    <div className=\"counter\">\n      <p>Only there to proof, that you can have multiple state slices.</p>\n      <p>Counter: {state.counter}</p>\n      <button onClick={() => dispatch('ADD', 1)}>Add 1</button>\n      <button onClick={() => dispatch('ADD', 5)}>Add 5</button>\n      <button onClick={() => dispatch('SUB', 1)}>Subtract 1</button>\n      <button onClick={() => dispatch('SUB', 5)}>Subtract 5</button>\n    </div>\n  );\n};\n\nexport default Counter;\n\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,SAAS,QAAO,OAAO;AAEtC,SAASC,QAAQ,QAAQ,sBAAsB;AAC/C,OAAO,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvB,MAAMC,OAAO,GAAGC,KAAK,IAAI;EAAAC,EAAA;EACvB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,EAAE;EACpC,MAAMQ,SAAS,GAAG,IAAI;EACtB,MAAMC,QAAQ,GAAG,KAAK;EACtBV,SAAS,CAAC,MAAM;IACd,IAAIW,QAAQ,GAAG,IAAI;IACnB,IAAIF,SAAS,IAAI,CAACC,QAAQ,EAAE;MAC1BC,QAAQ,GAAGC,WAAW,CAAC,MAAM;QAC3BJ,QAAQ,CAAC,KAAK,EAAE,CAAC,CAAC;MACpB,CAAC,EAAE,IAAI,CAAC;IACV,CAAC,MAAM,IAAIE,QAAQ,IAAIG,OAAO,KAAK,CAAC,EAAE;MACpCC,aAAa,CAACH,QAAQ,CAAC;IACzB;IAEA,OAAO,MAAMG,aAAa,CAACH,QAAQ,CAAC;EACtC,CAAC,EAAE,EAAE,CAAC;EAGN,oBACER,OAAA;IAAKY,SAAS,EAAC,SAAS;IAAAC,QAAA,gBACtBb,OAAA;MAAAa,QAAA,EAAG;IAA6D;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAI,eACpEjB,OAAA;MAAAa,QAAA,GAAG,WAAS,EAACT,KAAK,CAACc,OAAO;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eAC/BjB,OAAA;MAAQmB,OAAO,EAAEA,CAAA,KAAMd,QAAQ,CAAC,KAAK,EAAE,CAAC,CAAE;MAAAQ,QAAA,EAAC;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS,eACzDjB,OAAA;MAAQmB,OAAO,EAAEA,CAAA,KAAMd,QAAQ,CAAC,KAAK,EAAE,CAAC,CAAE;MAAAQ,QAAA,EAAC;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS,eACzDjB,OAAA;MAAQmB,OAAO,EAAEA,CAAA,KAAMd,QAAQ,CAAC,KAAK,EAAE,CAAC,CAAE;MAAAQ,QAAA,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS,eAC9DjB,OAAA;MAAQmB,OAAO,EAAEA,CAAA,KAAMd,QAAQ,CAAC,KAAK,EAAE,CAAC,CAAE;MAAAQ,QAAA,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAC1D;AAEV,CAAC;AAACd,EAAA,CA5BIF,OAAO;EAAA,QACeH,QAAQ;AAAA;AAAAsB,EAAA,GAD9BnB,OAAO;AA8Bb,eAAeA,OAAO;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}