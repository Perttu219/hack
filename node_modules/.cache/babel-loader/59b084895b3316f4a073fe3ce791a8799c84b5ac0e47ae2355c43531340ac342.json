{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nlet globalState = {};\nlet listeners = [];\nlet actions = {};\nexport const useStore = function () {\n  _s();\n  let shouldListen = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n  const setState = useState(globalState)[1];\n  const dispatch = (actionIdentifier, payload) => {\n    const newState = actions[actionIdentifier](globalState, payload);\n    globalState = {\n      ...globalState,\n      ...newState\n    };\n    for (const listener of listeners) {\n      listener(globalState);\n    }\n  };\n  useEffect(() => {\n    if (shouldListen) {\n      listeners.push(setState);\n    }\n    return () => {\n      if (shouldListen) {\n        listeners = listeners.filter(li => li !== setState);\n      }\n    };\n  }, [setState, shouldListen]);\n  return [globalState, dispatch];\n};\n_s(useStore, \"nM5W+84F396yCKDu4U2VhqiPF0o=\");\nexport const initStore = (userActions, initialState) => {\n  if (initialState) {\n    globalState = {\n      ...globalState,\n      ...initialState\n    };\n  }\n  actions = {\n    ...actions,\n    ...userActions\n  };\n};","map":{"version":3,"names":["useState","useEffect","globalState","listeners","actions","useStore","_s","shouldListen","arguments","length","undefined","setState","dispatch","actionIdentifier","payload","newState","listener","push","filter","li","initStore","userActions","initialState"],"sources":["/home/moilape/hackathon/src/hooks-store/store.js"],"sourcesContent":["import { useState, useEffect } from 'react';\n\nlet globalState = {};\nlet listeners = [];\nlet actions = {};\n\nexport const useStore = (shouldListen = true) => {\n  const setState = useState(globalState)[1];\n\n  const dispatch = (actionIdentifier, payload) => {\n    const newState = actions[actionIdentifier](globalState, payload);\n    globalState = { ...globalState, ...newState };\n\n    for (const listener of listeners) {\n      listener(globalState);\n    }\n  };\n\n  useEffect(() => {\n    if (shouldListen) {\n      listeners.push(setState);\n    }\n\n    return () => {\n      if (shouldListen) {\n        listeners = listeners.filter(li => li !== setState);\n      }\n    };\n  }, [setState, shouldListen]);\n\n  return [globalState, dispatch];\n};\n\nexport const initStore = (userActions, initialState) => {\n  if (initialState) {\n    globalState = { ...globalState, ...initialState };\n  }\n  actions = { ...actions, ...userActions };\n};\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE3C,IAAIC,WAAW,GAAG,CAAC,CAAC;AACpB,IAAIC,SAAS,GAAG,EAAE;AAClB,IAAIC,OAAO,GAAG,CAAC,CAAC;AAEhB,OAAO,MAAMC,QAAQ,GAAG,SAAAA,CAAA,EAAyB;EAAAC,EAAA;EAAA,IAAxBC,YAAY,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,IAAI;EAC1C,MAAMG,QAAQ,GAAGX,QAAQ,CAACE,WAAW,CAAC,CAAC,CAAC,CAAC;EAEzC,MAAMU,QAAQ,GAAGA,CAACC,gBAAgB,EAAEC,OAAO,KAAK;IAC9C,MAAMC,QAAQ,GAAGX,OAAO,CAACS,gBAAgB,CAAC,CAACX,WAAW,EAAEY,OAAO,CAAC;IAChEZ,WAAW,GAAG;MAAE,GAAGA,WAAW;MAAE,GAAGa;IAAS,CAAC;IAE7C,KAAK,MAAMC,QAAQ,IAAIb,SAAS,EAAE;MAChCa,QAAQ,CAACd,WAAW,CAAC;IACvB;EACF,CAAC;EAEDD,SAAS,CAAC,MAAM;IACd,IAAIM,YAAY,EAAE;MAChBJ,SAAS,CAACc,IAAI,CAACN,QAAQ,CAAC;IAC1B;IAEA,OAAO,MAAM;MACX,IAAIJ,YAAY,EAAE;QAChBJ,SAAS,GAAGA,SAAS,CAACe,MAAM,CAACC,EAAE,IAAIA,EAAE,KAAKR,QAAQ,CAAC;MACrD;IACF,CAAC;EACH,CAAC,EAAE,CAACA,QAAQ,EAAEJ,YAAY,CAAC,CAAC;EAE5B,OAAO,CAACL,WAAW,EAAEU,QAAQ,CAAC;AAChC,CAAC;AAACN,EAAA,CAzBWD,QAAQ;AA2BrB,OAAO,MAAMe,SAAS,GAAGA,CAACC,WAAW,EAAEC,YAAY,KAAK;EACtD,IAAIA,YAAY,EAAE;IAChBpB,WAAW,GAAG;MAAE,GAAGA,WAAW;MAAE,GAAGoB;IAAa,CAAC;EACnD;EACAlB,OAAO,GAAG;IAAE,GAAGA,OAAO;IAAE,GAAGiB;EAAY,CAAC;AAC1C,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}